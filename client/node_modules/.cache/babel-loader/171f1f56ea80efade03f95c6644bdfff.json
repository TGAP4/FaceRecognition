{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/facerecognitionbrain/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from '../components/Rank/Rank';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport Signin from '../components/Signin/Signin';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: 'b5b9fde99a5647db81fda8adc073438e'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        left: clarifaiFace.left_col * width,\n        top: clarifaiFace.top_row * height,\n        right: width - clarifaiFace.right_col * width,\n        bottom: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), ifthis.state.route === 'signin' ? React.createElement(Signin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/TGAP/Desktop/facerecognitionbrain/src/containers/App.js"],"names":["React","Component","Clarifai","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","left","left_col","top","top_row","right","right_col","bottom","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","render","ifthis"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from '../components/Rank/Rank';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport Signin from '../components/Signin/Signin';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80, \n      density: {\n        enable: true, \n        value_area: 400\n}}}}\n\nconst app = new Clarifai.App({apiKey: 'b5b9fde99a5647db81fda8adc073438e'});\n\nclass App extends Component {\n  constructor() {\n    super();\n      this.state = {\n        input: '',\n        imageUrl: '',\n        box: {},\n        route: 'signin'\n      }\n    }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      left: clarifaiFace.left_col * width,\n      top: clarifaiFace.top_row * height,\n      right: width - clarifaiFace.right_col * width,\n      bottom: height - clarifaiFace.bottom_row * height\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => {this.displayFaceBox(this.calculateFaceLocation(response))})\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions}/>\n        <Navigation/>\n        {ifthis.state.route === 'signin'\n          ? <Signin/>\n          : <div>\n          <Logo/>\n          <Rank/>\n          <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n          <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}