{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/FaceRecognition/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from '../components/Rank/Rank';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport Signin from '../components/Signin/Signin';\nimport Register from '../components/Register/Register';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: 'b5b9fde99a5647db81fda8adc073438e'\n});\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = user => {\n      this.setState({\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          entries: user.entries,\n          joined: user.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        left: clarifaiFace.left_col * width,\n        top: clarifaiFace.top_row * height,\n        right: width - clarifaiFace.right_col * width,\n        bottom: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/TGAP/Desktop/FaceRecognition/src/containers/App.js"],"names":["React","Component","Clarifai","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","setState","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","left","left_col","top","top_row","right","right_col","bottom","bottom_row","displayFaceBox","onInputChange","event","target","onSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from '../components/Rank/Rank';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport Signin from '../components/Signin/Signin';\nimport Register from '../components/Register/Register';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80, \n      density: {\n        enable: true, \n        value_area: 400\n}}}}\n\nconst app = new Clarifai.App({apiKey: 'b5b9fde99a5647db81fda8adc073438e'});\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n      this.state = {\n        input: '',\n        imageUrl: '',\n        box: {},\n        route: 'signin',\n        isSignedIn: false,\n        user: {\n          id: '',\n          name: '',\n          email: '',\n          entries: 0,\n          joined: ''\n        }\n      }\n    }\n\n  loadUser = user => {\n    this.setState({user: {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      entries: user.entries,\n      joined: user.joined\n    }});\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      left: clarifaiFace.left_col * width,\n      top: clarifaiFace.top_row * height,\n      right: width - clarifaiFace.right_col * width,\n      bottom: height - clarifaiFace.bottom_row * height\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}))\n        })\n        .catch(console.log);\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))})\n    .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions}/>\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route === 'home'\n          ? <div>\n            <Logo/>\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n          : (route ==='signin'\n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}